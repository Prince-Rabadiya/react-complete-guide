{"ast":null,"code":"var _jsxFileName = \"/Users/princerabadiya/Projects/react-complete-guide/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cartContext';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckOut, setIsCheckOut] = useState(false);\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHanlder = () => {\n    setIsCheckOut(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmiting(true);\n    await fetch('https://react-demo-1b4c3-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmiting(false);\n    setDidSubmit(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isCheckOut && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: props.onClose,\n      onSubmit: submitOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }, this), !isCheckOut && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderHanlder,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 29\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"aUCzfc80VJCTZgHlpb/S7SmKtrA=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/princerabadiya/Projects/react-complete-guide/src/components/Cart/Cart.js"],"names":["React","useContext","useState","Modal","CartContext","CartItem","classes","Checkout","Cart","props","isCheckOut","setIsCheckOut","isSubmiting","setIsSubmiting","didSubmit","setDidSubmit","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHanlder","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","price","bind","cartModalContent","total","onClose","actions","button"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cartContext';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css'\nimport Checkout from './Checkout';\n\nconst Cart = (props) => {\n  const [isCheckOut, setIsCheckOut] = useState(false);\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = (cartCtx.items.length > 0)\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({...item, amount: 1});\n  }\n\n  const orderHanlder = () => {\n    setIsCheckOut(true);\n  }\n\n  const submitOrderHandler = async(userData) => {\n    setIsSubmiting(true);\n    await fetch('https://react-demo-1b4c3-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n\n    setIsSubmiting(false);\n    setDidSubmit(true);\n  }\n\n  const cartItems = <ul className={classes['cart-items']}>\n    {cartCtx.items.map((item) => \n      <CartItem \n        key={item.id} \n        name={item.name} \n        amount={item.amount} \n        price={item.price} \n        onRemove={cartItemRemoveHandler.bind(null, item.id)} \n        onAdd={cartItemAddHandler.bind(null, item)} \n      />)}\n  </ul>;\n\n  const cartModalContent = (<React.Fragment>\n    {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {isCheckOut && <Checkout onCancel={props.onClose} onSubmit={submitOrderHandler}/>}\n      {\n        !isCheckOut && \n        (\n          <div className={classes.actions}>\n            <button className={classes['button--alt']} onClick={props.onClose}>\n            Close\n          </button>\n          { \n            hasItems && \n            <button className={classes.button} onClick={orderHanlder}>\n              Order\n            </button>\n          }\n          </div>\n        )\n      }\n  </React.Fragment>)\n\n  return (\n    <Modal onClose={props.onClose}>\n      \n    </Modal>\n  )\n}\n\nexport default Cart"]},"metadata":{},"sourceType":"module"}